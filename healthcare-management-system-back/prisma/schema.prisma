// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  role      String   
  phone     String?     
  patient   Patient?
  doctor    Doctor?
  createdAt DateTime @default(now())  
  updatedAt DateTime @updatedAt       
}
model Patient {
  id             Int     @id @default(autoincrement())
  dob            DateTime
  address        String
  medicalHistory String
  userId         Int     @unique
  user           User    @relation(fields: [userId], references: [id])
}


model Doctor {
  id        Int     @id @default(autoincrement())
  specialty String
  schedule  String
  userId    Int     @unique
  user      User    @relation(fields: [userId], references: [id])
}

model Appointment {
  id          Int               @id @default(autoincrement())
  date        DateTime
  notes String?
  status      AppointmentStatus @default(PENDIENTE)
  patientId   Int
  doctorId    Int
  patient     Patient           @relation(fields: [patientId], references: [id])
  doctor      Doctor            @relation(fields: [doctorId], references: [id])
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

enum AppointmentStatus {
  PENDIENTE
  CONFIRMADA
  CANCELADA
}


enum DayOfWeek {
  LUNES
  MARTES
  MIERCOLES
  JUEVES
  VIERNES
  SABADO
  DOMINGO
}

model DoctorSchedule {
  id        Int       @id @default(autoincrement())
  doctorId  Int
  day       DayOfWeek
  startTime DateTime  
  endTime   DateTime
  doctor    Doctor    @relation(fields: [doctorId], references: [id])
}

